function Add-Scoped () {
    $EntityName = $requiredInfo.EntityName
    $Namespace = $requiredInfo.Namespace
    
    $pathName = "././Infrastructure/DependencyInjection.cs"
    $file = Get-Content $pathName
    $scopedName = "`t`t`tservices.AddScoped<I$($EntityName)Service, $($EntityName)Service>();"

    if (!([string]$file).Contains("services.AddScoped<I$($EntityName)Service, $($EntityName)Service>();")) {
        foreach ($line in Get-Content $pathName) {
            if ($line.Contains("/* <auto-generated (for-script)/> */")) {
                $line += "`n" + $scopedName + "`n"
            }
            elseif ($line.Contains("//using ITX.Application")) {
                if (!([string]$file).Contains("Interfaces.$($Namespace);")) {
                    $line += "`n" + "using ITX.Application.Interfaces.$($Namespace);"
                }
            }
            elseif ($line.Contains("//using ITX.Infrastructure")) {
                if (!([string]$file).Contains("Services.$($Namespace);")) {
                    $line += "`n" + "using ITX.Infrastructure.Data.Services.$($Namespace);"
                }
            }
            $newString += $line + "`n";
        }
        New-Item -Path $pathName -Value $newString -Force
    }
    else {
        Write-Host "`t¬ Scoped zaten mevcut." -ForegroundColor  DarkBlue
    }

    
    $pathName2 = "././Persistance/ConfigureServices.cs"
    $file2 = Get-Content $pathName2
    $scopedName2 = "`t`tservices.AddTransient<I$($EntityName)Repository, $($EntityName)Repository>();"

    if (!([string]$file2).Contains("services.AddTransient<I$($EntityName)Repository, $($EntityName)Repository>();")) {
        foreach ($line in Get-Content $pathName2) {
            if ($line.Contains("/* <auto-generated (for-script)/> */")) {
                $line += "`n" + $scopedName2 + "`n"
            }
            elseif ($line.Contains("//using ITX.Application")) {
                if (!([string]$file).Contains("Interfaces.$($Namespace);")) {
                    $line += "`n" + "using ITX.Application.Interfaces.$($Namespace);"
                }
            }
            elseif ($line.Contains("//using ITX.Persistance")) {
                if (!([string]$file).Contains("Services.$($Namespace);")) {
                    $line += "`n" + "using ITX.Infrastructure.Data.Repositories.$($Namespace);"
                }
            }
            $newString2 += $line + "`n";
        }
        New-Item -Path $pathName2 -Value $newString2 -Force
    }
    else {
        Write-Host "`t¬ Scoped zaten mevcut." -ForegroundColor  DarkBlue
    }
    


}

